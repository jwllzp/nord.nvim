local M = {}

function M.setup(colors)
	local function hi(group, opts)
		vim.api.nvim_set_hl(0, group, opts)
	end

	-- LSP Semantic Tokens
	hi("@lsp.type.namespace", { link = "@namespace" })
	hi("@lsp.type.type", { link = "@type" })
	hi("@lsp.type.class", { link = "@type" })
	hi("@lsp.type.enum", { link = "@type" })
	hi("@lsp.type.interface", { link = "@type" })
	hi("@lsp.type.struct", { link = "@type" })
	hi("@lsp.type.typeParameter", { link = "@type" })
	hi("@lsp.type.parameter", { link = "@parameter" })
	hi("@lsp.type.variable", { link = "@variable" })
	hi("@lsp.type.property", { link = "@property" })
	hi("@lsp.type.enumMember", { link = "@constant" })
	hi("@lsp.type.event", { link = "@variable" })
	hi("@lsp.type.function", { link = "@function" })
	hi("@lsp.type.method", { link = "@method" })
	hi("@lsp.type.macro", { link = "@macro" })
	hi("@lsp.type.keyword", { link = "@keyword" })
	hi("@lsp.type.modifier", { link = "@keyword" })
	hi("@lsp.type.comment", { link = "@comment" })
	hi("@lsp.type.string", { link = "@string" })
	hi("@lsp.type.number", { link = "@number" })
	hi("@lsp.type.regexp", { link = "@string.regex" })
	hi("@lsp.type.operator", { link = "@operator" })
	hi("@lsp.type.decorator", { link = "@function" })
	hi("@lsp.type.deprecated", { link = "@comment" })
	hi("@lsp.type.escapeSequence", { link = "@string.escape" })
	hi("@lsp.type.formatSpecifier", { link = "@string.special" })
	hi("@lsp.type.selfKeyword", { link = "@keyword" })
	hi("@lsp.type.selfTypeKeyword", { link = "@keyword" })
	hi("@lsp.type.variableBuiltin", { link = "@variable.builtin" })
	hi("@lsp.type.variableConstant", { link = "@constant" })
	hi("@lsp.type.variableDefaultLibrary", { link = "@variable.builtin" })
	hi("@lsp.type.variableGlobal", { link = "@variable" })
	hi("@lsp.type.variableReadonly", { link = "@variable" })
	hi("@lsp.type.variableStatic", { link = "@variable" })
	hi("@lsp.type.variableClass", { link = "@variable" })
	hi("@lsp.type.variableFunction", { link = "@variable" })
	hi("@lsp.type.variableModule", { link = "@variable" })
	hi("@lsp.type.variableParameter", { link = "@parameter" })
	hi("@lsp.type.variableProperty", { link = "@property" })
	hi("@lsp.type.variableType", { link = "@type" })
	hi("@lsp.type.variableEnum", { link = "@type" })
	hi("@lsp.type.variableEnumMember", { link = "@constant" })
	hi("@lsp.type.variableStruct", { link = "@type" })
	hi("@lsp.type.variableUnion", { link = "@type" })
	hi("@lsp.type.variableInterface", { link = "@type" })
	hi("@lsp.type.variableClass", { link = "@type" })
	hi("@lsp.type.variableFunction", { link = "@function" })
	hi("@lsp.type.variableMethod", { link = "@method" })
	hi("@lsp.type.variableMacro", { link = "@macro" })
	hi("@lsp.type.variableKeyword", { link = "@keyword" })
	hi("@lsp.type.variableModifier", { link = "@keyword" })
	hi("@lsp.type.variableComment", { link = "@comment" })
	hi("@lsp.type.variableString", { link = "@string" })
	hi("@lsp.type.variableNumber", { link = "@number" })
	hi("@lsp.type.variableRegexp", { link = "@string.regex" })
	hi("@lsp.type.variableOperator", { link = "@operator" })
	hi("@lsp.type.variableDecorator", { link = "@function" })
	hi("@lsp.type.variableDeprecated", { link = "@comment" })
	hi("@lsp.type.variableEscapeSequence", { link = "@string.escape" })
	hi("@lsp.type.variableFormatSpecifier", { link = "@string.special" })
	hi("@lsp.type.variableSelfKeyword", { link = "@keyword" })
	hi("@lsp.type.variableSelfTypeKeyword", { link = "@keyword" })

	-- LSP Diagnostics
	hi("DiagnosticError", { link = "Error" })
	hi("DiagnosticWarn", { link = "WarningMsg" })
	hi("DiagnosticInfo", { link = "MoreMsg" })
	hi("DiagnosticHint", { link = "Comment" })
	hi("DiagnosticOk", { link = "Comment" })

	hi("DiagnosticVirtualTextError", { link = "DiagnosticError" })
	hi("DiagnosticVirtualTextWarn", { link = "DiagnosticWarn" })
	hi("DiagnosticVirtualTextInfo", { link = "DiagnosticInfo" })
	hi("DiagnosticVirtualTextHint", { link = "DiagnosticHint" })
	hi("DiagnosticVirtualTextOk", { link = "DiagnosticOk" })

	hi("DiagnosticUnderlineError", { link = "DiagnosticError" })
	hi("DiagnosticUnderlineWarn", { link = "DiagnosticWarn" })
	hi("DiagnosticUnderlineInfo", { link = "DiagnosticInfo" })
	hi("DiagnosticUnderlineHint", { link = "DiagnosticHint" })
	hi("DiagnosticUnderlineOk", { link = "DiagnosticOk" })

	hi("DiagnosticFloatingError", { link = "DiagnosticError" })
	hi("DiagnosticFloatingWarn", { link = "DiagnosticWarn" })
	hi("DiagnosticFloatingInfo", { link = "DiagnosticInfo" })
	hi("DiagnosticFloatingHint", { link = "DiagnosticHint" })
	hi("DiagnosticFloatingOk", { link = "DiagnosticOk" })

	hi("DiagnosticSignError", { link = "DiagnosticError" })
	hi("DiagnosticSignWarn", { link = "DiagnosticWarn" })
	hi("DiagnosticSignInfo", { link = "DiagnosticInfo" })
	hi("DiagnosticSignHint", { link = "DiagnosticHint" })
	hi("DiagnosticSignOk", { link = "DiagnosticOk" })

	-- LSP References
	hi("LspReferenceText", { link = "Visual" })
	hi("LspReferenceRead", { link = "Visual" })
	hi("LspReferenceWrite", { link = "Visual" })

	-- LSP Code Lens
	hi("LspCodeLens", { link = "Comment" })
	hi("LspCodeLensSeparator", { link = "Comment" })

	-- LSP Signature Help
	hi("LspSignatureActiveParameter", { link = "Search" })

	-- LSP Inlay Hints
	hi("LspInlayHint", { link = "Comment" })

	-- LspSaga (if used)
	hi("LspSagaCodeActionTitle", { link = "Title" })
	hi("LspSagaCodeActionBorder", { link = "Normal" })
	hi("LspSagaCodeActionContent", { link = "Normal" })
	hi("LspSagaLspFinderBorder", { link = "Normal" })
	hi("LspSagaAutoPreview", { link = "Normal" })
	hi("LspSagaHoverBorder", { link = "Normal" })
	hi("LspSagaRenameBorder", { link = "Normal" })
	hi("LspSagaDefPreviewBorder", { link = "Normal" })
	hi("LspSagaDiagnosticBorder", { link = "Normal" })
	hi("LspSagaDiagnosticHeader", { link = "Title" })
	hi("LspSagaDiagnosticTruncateLine", { link = "Normal" })
	hi("LspSagaShowSignatureHelpBorder", { link = "Normal" })
	hi("LspSagaShTruncateLine", { link = "Normal" })
	hi("LspSagaDocTruncateLine", { link = "Normal" })
	hi("LspSagaLightBulb", { link = "Normal" })
	hi("LspSagaLightBulbSign", { link = "Normal" })
	hi("LspSagaDiagnosticError", { link = "DiagnosticError" })
	hi("LspSagaDiagnosticWarn", { link = "DiagnosticWarn" })
	hi("LspSagaDiagnosticInfo", { link = "DiagnosticInfo" })
	hi("LspSagaDiagnosticHint", { link = "DiagnosticHint" })
	hi("LspSagaErrorTruncateLine", { link = "DiagnosticError" })
	hi("LspSagaWarnTruncateLine", { link = "DiagnosticWarn" })
	hi("LspSagaInfoTruncateLine", { link = "DiagnosticInfo" })
	hi("LspSagaHintTruncateLine", { link = "DiagnosticHint" })
	hi("LspSagaErrorBorder", { link = "DiagnosticError" })
	hi("LspSagaWarnBorder", { link = "DiagnosticWarn" })
	hi("LspSagaInfoBorder", { link = "DiagnosticInfo" })
	hi("LspSagaHintBorder", { link = "DiagnosticHint" })
	hi("LspSagaErrorSign", { link = "DiagnosticError" })
	hi("LspSagaWarnSign", { link = "DiagnosticWarn" })
	hi("LspSagaInfoSign", { link = "DiagnosticInfo" })
	hi("LspSagaHintSign", { link = "DiagnosticHint" })
	hi("LspSagaErrorTitle", { link = "DiagnosticError" })
	hi("LspSagaWarnTitle", { link = "DiagnosticWarn" })
	hi("LspSagaInfoTitle", { link = "DiagnosticInfo" })
	hi("LspSagaHintTitle", { link = "DiagnosticHint" })
end

return M
